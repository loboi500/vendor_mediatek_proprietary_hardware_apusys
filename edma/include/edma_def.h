#ifndef EDMA_DEF_H
#define EDMA_DEF_H

enum EDMA_FMT_IDX {
	EDMA_FMT_NORMAL_MODE = 0,
	EDMA_FMT_FILL_MODE = 1,
	EDMA_FMT_F16_TO_F32 = 2,
	EDMA_FMT_F32_TO_F16 = 3,
	EDMA_FMT_I8_TO_F32 = 4,
	EDMA_FMT_F32_TO_I8 = 5,
	EDMA_FMT_I8_TO_I8 = 6,
	EDMA_FMT_RGB_8_TO_RGBA_8 = 7,
	EDMA_FMT_YUV420_8_TO_RGBA_8 = 8,
	EDMA_FMT_YUV422_8_TO_RGBA_8 = 9,
	EDMA_FMT_RGB_8_TO_YUV420_8 = 10,
	EDMA_FMT_RGBA_8_TO_YUV420_8 = 11,
	EDMA_FMT_RGBA_102_TO_RGBA_16 = 12,
	EDMA_FMT_YUV420_16_TO_RGBA_16 = 13,
	EDMA_FMT_YUV420_P010_TO_RGBA_16 = 14,
	EDMA_FMT_YUV420_MTK_TO_RGBA_16 = 15,
	EDMA_FMT_YUV420_P010_TO_YUV420_16 = 16,
	EDMA_FMT_YUV420_MTK_TO_YUV420_16 = 17,
	EDMA_FMT_RGBA_16_TO_YUV420_16 = 18,
	EDMA_FMT_RGBA_102_TO_YUV420_16 = 19,
	EDMA_FMT_RGBA_F1110_TO_RGBA_F16 = 20,
	EDMA_FMT_RAW_8_TO_RAW_16 = 21,
	EDMA_FMT_RAW_10_TO_RAW_16 = 22,
	EDMA_FMT_RAW_12_TO_RAW_16 = 23,
	EDMA_FMT_RAW_14_TO_RAW_16 = 24,
	EDMA_FMT_RAW_8_TO_RAW_32 = 25,
	EDMA_FMT_RAW_8_TO_RAW_64 = 26,
	EDMA_FMT_RAW_10_TO_RAW_64 = 27,
	EDMA_FMT_RAW_12_TO_RAW_64 = 28,
	EDMA_FMT_RAW_14_TO_RAW_64 = 29,
	EDMA_FMT_RAW_16_TO_RAW_64 = 30,
	EDMA_FMT_RGBA_8_TO_RGBA_8_CODE = 31,
	EDMA_FMT_YUV420_8_TO_YUV420_8_CODE = 32,
	EDMA_FMT_RGB_8_TO_YUV420_8_CODE = 33,
	EDMA_FMT_RGBA_102_TO_RGBA_10_CODE = 34,
	EDMA_FMT_YUV420_16_TO_YUV420_10_CODE = 35,
	EDMA_FMT_RGBA_16_TO_YUV420_10_CODE = 36,
	EDMA_FMT_ACT_TO_ACT_CODE = 37,
	EDMA_FMT_RGBA_8_CODE_TO_RGBA_8 = 38,
	EDMA_FMT_YUV420_8_CODE_TO_YUV420_8 = 39,
	EDMA_FMT_YUV420_8_CODE_TO_RGBA_8 = 40,
	EDMA_FMT_RGBA_10_CODE_TO_RGBA_16 = 41,
	EDMA_FMT_YUV420_10_CODE_TO_YUV420_16 = 42,
	EDMA_FMT_YUV420_10_CODE_TO_RGBA_16 = 43,
	EDMA_FMT_ACT_CODE_TO_ACT = 44,
	EDMA_FMT_BAYER_10_TO_AINR_16 = 45,
	EDMA_FMT_BAYER_12_TO_AINR_16 = 46,
	EDMA_FMT_4CELL_10_TO_AINR_16 = 47,
	EDMA_FMT_4CELL_12_TO_AINR_16 = 48,
	EDMA_FMT_3PRGB_12_TO_AINR_16 = 49,
	EDMA_FMT_3PFULLG_12_TO_AINR_16 = 50,
	EDMA_FMT_AINR_16_TO_BAYER_10 = 51,
	EDMA_FMT_AINR_16_TO_BAYER_12 = 52,
	EDMA_FMT_AINR_16_TO_BAYER_16 = 53,
	EDMA_FMT_AINR_16_TO_3PRGB_12 = 54,
	EDMA_FMT_AINR_16_TO_3PFULLG_12_G = 55,
	EDMA_FMT_AINR_16_TO_3PFULLG_12_RB = 56,
	EDMA_FMT_AINR_16_TO_2PFULLG_12_RB = 57,

	//same as apusys eDMA engine
	EDMA_FMT_ROTATE_90	= 90,	//rotate angle 90
	EDMA_FMT_ROTATE_180	= 91,	//rotate angle 180
	EDMA_FMT_ROTATE_270	= 92,	//rotate angle 270

	EDMA_FMT_SPLIT_2	= 93,	//split 2
	EDMA_FMT_SPLIT_3	= 94,	//split 3
	EDMA_FMT_SPLIT_4	= 95,	//split 4

	EDMA_FMT_MERGE_2	= 96,	//merge 2
	EDMA_FMT_MERGE_3	= 97,	//merge 3
	EDMA_FMT_MERGE_4	= 98,	//merge 4

	EDMA_FMT_UNPACK_8_TO_16 	= 99,	//unpack from  8 bit to 16 bit
	EDMA_FMT_UNPACK_10_TO_16	= 100,	//unpack from 10 bit to 16 bit
	EDMA_FMT_UNPACK_12_TO_16	= 101,	//unpack from 12 bit to 16 bit
	EDMA_FMT_UNPACK_14_TO_16	= 102,	//unpack from 14 bit to 16 bit

	EDMA_FMT_PACK_16_TO_10		= 103,	//pack from 16 bit to 10 bit
	EDMA_FMT_PACK_16_TO_12		= 104,	//pack from 16 bit to 12 bit

	EDMA_FMT_565_TO_888 		= 105,	//unpack 565 to 888
	EDMA_FMT_565_TO_8888		= 106,	//unpack 565 to 8888

	EDMA_FMT_RGB_8_TO_GRAY_8	= 128,
	EDMA_FMT_YUV420_8_TO_RGB_8	= 129,
	EDMA_FMT_YUV420_8_TO_YUV444_8 = 130,
	EDMA_FMT_YUV444_8_TO_YUV420_8 = 131
};

enum RAW_SHIFT_IDX {
	RAW_SHIFT_ALIGN_TO_LSB = 0,
	RAW_SHIFT_ALIGN_TO_LSB_LS_2_BITS = 2,
	RAW_SHIFT_ALIGN_TO_LSB_LS_4_BITS = 4,
	RAW_SHIFT_ALIGN_TO_LSB_LS_6_BITS = 6,
	RAW_SHIFT_ALIGN_TO_LSB_LS_8_BITS = 8
};

enum EDMA_RGB2RGBA_ALPHA_POS_IDX {
	EDMA_RGB2RGBA_ALPHA_POS_HIGH = 0,
	EDMA_RGB2RGBA_ALPHA_POS_LOW = 1
};

enum EDMA_PAD_POS_IDX {
	EDMA_PAD_POS_LOW = 0,
	EDMA_PAD_POS_HIGH = 1
};

enum EDMA_EXTRACT_POS_IDX {
	EDMA_EXTRACT_POS_LOW = 0,
	EDMA_EXTRACT_POS_HIGH = 1
};

enum EDMA_LAYOUT_IDX {
	EDMA_LAYOUT_INTERLEAVED = 0,
	EDMA_LAYOUT_SEMI_PLANAR = 1,
	EDMA_LAYOUT_PLANAR = 2
};

enum EDMA_ITLV_FMT_YUV420_IDX {
	EDMA_ITLV_FMT_YUV420_UV = 0,
	EDMA_ITLV_FMT_YUV420_VU = 1
};

enum EDMA_ITLV_FMT_YUV422_IDX {
	EDMA_ITLV_FMT_YUV422_YUYV = 0,
	EDMA_ITLV_FMT_YUV422_YVYU = 1
};

enum EDMA_ITLV_FMT_RGBA_4CH_IDX {
	EDMA_ITLV_FMT_RGBA_RGBA = 0,
	EDMA_ITLV_FMT_RGBA_ARGB = 1,
	EDMA_ITLV_FMT_RGBA_BGRA = 2,
	EDMA_ITLV_FMT_RGBA_ABGR = 3
};

enum EDMA_ITLV_FMT_RGB_3CH_IDX {
	EDMA_ITLV_FMT_RGB_RGB = 0,
	EDMA_ITLV_FMT_RGB_BGR = 1
};

#define MAX_EDMA_DESC_NUM 1048575
#define MAX_EDMA_SIZE_X 65535
#define MAX_EDMA_RGB_8_TO_RGBA_8_SIZE_X 49149
#define MAX_EDMA_YUV420_8_TO_RGBA_8_SIZE_X 1024
#define MAX_EDMA_YUV422_8_TO_RGBA_8_SIZE_X 32764
#define MAX_EDMA_RGBA_8_TO_YUV420_8_SIZE_X 65528
#define MAX_EDMA_SIZE_Y 65535
#define MAX_EDMA_SIZE_Y_EVEN 65534
#define MAX_EDMA_SIZE_Y_EVEN_HALF (MAX_EDMA_SIZE_Y_EVEN>>1)
#define MAX_EDMA_SIZE_Y_EVEN_MINUS_2 (MAX_EDMA_SIZE_Y_EVEN-2)
#define MAX_EDMA_SIZE_Y_EVEN_MINUS_2_HALF (MAX_EDMA_SIZE_Y_EVEN_MINUS_2>>1)
#define MAX_EDMA_SIZE_Z 65535

#define MAX_EDMA_1D_COPY_SPLIT_SIZE 65280 // burst length = 16, AXI bus width = 16 bytes
#define MAX_EDMA_RGB_8_TO_RGBA_8_1D_COPY_SPLIT_SIZE 48384 // burst length = 16, AXI bus width = 16 bytes
#define MAX_EDMA_YUV420_8_TO_RGBA_8_1D_COPY_SPLIT_SIZE 1008 // burst length = 16, AXI bus width = 16 bytes
#define EDMA_YUV420_8_TO_RGBA_8_EXTRA_SIZE 2 // for tile boundary correctness with frame result
#define EDMA_YUV420_8_TO_RGBA_8_EXTRA_SIZE_HALF (EDMA_YUV420_8_TO_RGBA_8_EXTRA_SIZE>>1)
#define MAX_EDMA_YUV422_8_TO_RGBA_8_1D_COPY_SPLIT_SIZE 32512 // burst length = 16, AXI bus width = 16 bytes
#define MAX_EDMA_RGBA_8_TO_YUV420_8_1D_COPY_SPLIT_SIZE 65280 // burst length = 16, AXI bus width = 16 bytes
#define EDMA_RGBA_8_TO_YUV420_8_EXTRA_SIZE 2 // for tile boundary correctness with frame result

#define MAX_EDMA_ROT_4B_SIZE_X 256
#define MAX_EDMA_ROT_4B_SIZE_Y 32
#define MAX_EDMA_ROT_3B_SIZE_X 255
#define MAX_EDMA_ROT_3B_SIZE_Y 32
#define MAX_EDMA_ROT_2B_SIZE_X 256
#define MAX_EDMA_ROT_2B_SIZE_Y 32
#define MAX_EDMA_ROT_1B_SIZE_X 128
#define MAX_EDMA_ROT_1B_SIZE_Y 64

#define MAX_EDMA_SPLIT2_PXL_SIZE_X 512
#define MAX_EDMA_SPLIT2_CH_SIZE_X 256
#define MAX_EDMA_SPLIT2_SIZE_Y 16
#define MAX_EDMA_SPLIT3_PXL_SIZE_X 768
#define MAX_EDMA_SPLIT3_CH_SIZE_X 256
#define MAX_EDMA_SPLIT3_SIZE_Y 10
#define MAX_EDMA_SPLIT4_PXL_SIZE_X 1024
#define MAX_EDMA_SPLIT4_CH_SIZE_X 256
#define MAX_EDMA_SPLIT4_SIZE_Y 8

#define MAX_EDMA_MERGE2_PXL_SIZE_X 512
#define MAX_EDMA_MERGE2_CH_SIZE_X 256
#define MAX_EDMA_MERGE2_SIZE_Y 16
#define MAX_EDMA_MERGE3_PXL_SIZE_X 768
#define MAX_EDMA_MERGE3_CH_SIZE_X 256
#define MAX_EDMA_MERGE3_SIZE_Y 10
#define MAX_EDMA_MERGE4_PXL_SIZE_X 1024
#define MAX_EDMA_MERGE4_CH_SIZE_X 256
#define MAX_EDMA_MERGE4_SIZE_Y 8

#define MAX_EDMA_UNPACK_8_SIZE 32640
#define MAX_EDMA_UNPACK_10_SIZE 40800
#define MAX_EDMA_UNPACK_12_SIZE 48960
#define MAX_EDMA_UNPACK_14_SIZE 57120
#define MAX_EDMA_PACK_10_SIZE 40800
#define MAX_EDMA_PACK_12_SIZE 48960

#define MAX_EDMA_565_TO_888_SRC_SIZE 43520
#define MAX_EDMA_565_TO_888_DST_SIZE 65280

#endif
